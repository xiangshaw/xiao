<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>plus.axz</groupId>
    <artifactId>xiao</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>xiao-api</module><!--微服务暴露接口定义-->
        <module>xiao-admin</module><!--admin微服务管理端-->
        <module>xiao-common</module><!--公共配置-技术解决方案-->
        <module>xiao-model</module><!--公共实体类-->
        <module>xiao-utils</module><!--公共工具类-->
        <module>xiao-admin-gateway</module>
        <module>xiao-user</module>
        <module>xiao-wemedia</module>
        <module>xiao-article</module>
        <module>xiao-seata</module>
        <module>xiao-wemedia-gateway</module>
        <module>xiao-gateway</module>
        <module>xiao-behavior</module>
        <module>xiao-comment</module>
        <module>xiao-search</module><!--admin网关-->
    </modules>
    <!--继承Spring boot工程-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.5.RELEASE</version>
        <relativePath/>
    </parent>
    <properties>
        <!-- 项目源码及编译输出的编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 项目编译JDK版本 -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!--依赖包管理-->
        <lombok.version>1.18.8</lombok.version>
        <!--https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明-->
        <spring.boot.version>2.1.5.RELEASE</spring.boot.version>
        <com.alibaba.cloud>2.1.0.RELEASE</com.alibaba.cloud>
        <spring.cloud.version>Greenwich.RELEASE</spring.cloud.version>
        <seata.all.version>0.9.0</seata.all.version>

        <spring.jwt.version>1.0.9.RELEASE</spring.jwt.version>
        <reflections.version>0.9.11</reflections.version>
        <fastjson.version>1.2.58</fastjson.version>
        <fastjson.dataformat.version>2.9.9</fastjson.dataformat.version>
        <swagger.version>2.9.2</swagger.version>
        <knife4j.version>2.0.2</knife4j.version>
        <!--数据库的datetime 被解析为java.sql.Timestamp，解决java.time.LocalDateTime无法反序列化的问题-->
        <!--seata 1.5.x版本修复了 FastjsonUndoLogParser 中 LocalDataTime 类型无法回滚的问题-->
        <mysql.version>8.0.22</mysql.version>
        <mybatis.version>3.5.1</mybatis.version>
        <mybatis.spring.version>2.0.1</mybatis.spring.version>
        <mybatis.plus.version>3.1.1</mybatis.plus.version>
        <pagehelper.version>1.2.3</pagehelper.version>
        <jjwt.version>0.9.1</jjwt.version>
        <hutool.version>5.7.3</hutool.version>
        <aliyun.version>3.10.2</aliyun.version>
        <aliyun.core.version>4.1.1</aliyun.core.version>
        <aliyun.green.version>3.4.1</aliyun.green.version>
        <fastdfs.version>1.26.7</fastdfs.version>
        <curator.version>4.2.0</curator.version>
        <kafka.version>2.2.7.RELEASE</kafka.version>
        <kafka.client.version>2.0.1</kafka.client.version>
        <xxl.job.version>2.2.0-SNAPSHOT</xxl.job.version>
        <jsoup.version>1.10.2</jsoup.version>
        <es.version>7.4.0</es.version>
    </properties>

    <dependencies>
        <!--日志处理包-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <!--管理依赖版本号-->
    <dependencyManagement>
        <dependencies>
            <!--内部依赖工程-->
            <dependency>
                <groupId>plus.axz</groupId>
                <artifactId>xiao-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>plus.axz</groupId>
                <artifactId>xiao-admin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>plus.axz</groupId>
                <artifactId>xiao-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>plus.axz</groupId>
                <artifactId>xiao-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>plus.axz</groupId>
                <artifactId>xiao-utils</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Spring boot 特殊处理包 -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-jwt</artifactId>
                <version>${spring.jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <!-- 排除默认的logback日志，使用log4j-->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- spring colud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring cloud alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${com.alibaba.cloud}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.alibaba.cloud</groupId>
                        <artifactId>spring-cloud-alibaba-seata</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.alibaba.cloud</groupId>
                        <artifactId>spring-cloud-starter-alibaba-seata</artifactId>
                    </exclusion>
                </exclusions>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency><!--处理long id 精度丢失问题-->
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-cbor</artifactId>
                <version>${fastjson.dataformat.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${fastjson.dataformat.version}</version>
            </dependency>
            <!-- curator ZK 客户端 -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <!-- kafkfa -->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.client.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>connect-json</artifactId>
                        <groupId>org.apache.kafka</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <!-- Mysql 数据库 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>
            <!-- jsoup -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tobato</groupId>
                <artifactId>fastdfs-client</artifactId>
                <version>${fastdfs.version}</version>
            </dependency>
            <!--aliyun-->
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>${aliyun.core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-green</artifactId>
                <version>${aliyun.green.version}</version>
            </dependency>
            <!-- xxl-job -->
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl.job.version}</version>
            </dependency>
            <!--elasticsearch-->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${es.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${es.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${es.version}</version>
            </dependency>
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata.all.version}</version>
            </dependency>
        </dependencies>

    </dependencyManagement>
</project>
